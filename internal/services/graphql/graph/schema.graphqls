type Mutation {
  signUp(input: AuthData!): AuthPayload!
  signIn(input: AuthData!): AuthPayload!
  updateUserHealthData(input: UpdateUserHealthDataInput!): UserAccountPayload!

  addVisitRecord(input: AddVisitRecordInput!): Boolean!
}

type Query {
  getUserInfo(input: UserAccountData!): UserAccountPayload!
  getUserVisitRecords(input: UserAccountData!): [VisitRecord!]!
  
  getDoctors: [Doctor!]!
}

type Doctor {
  doctorId: String!
  doctorName: String!
  specialization: String!
  experienceYears: Int!
}

type VisitRecord {
  recordNumber: String!
  doctorName: String!
  specialization: String!
  visitDate: String!
}

input UserAccountData {
  userId: String!
}

type UserAccountPayload {
  username: String!
  age: Int!
  height: Float!
  weight: Float!
  pulse: Int!
  pressure: String!
  dailyWater: Float
  bodyMassIndex: Float
}

input UpdateUserHealthDataInput {
  userId: String!
  age: Int
  height: Float
  weight: Float
  pulse: Int
  pressure: String
}

type AuthPayload {
  userId: String!
  role: String!
}

input AuthData {
  username: String!
  password: String!
}

input AddVisitRecordInput {
  userId: String!
  doctorName: String!
  specialization: String!
  visitDate: String!
}